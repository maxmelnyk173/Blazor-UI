@page "/editcategory/{id}"
@using FinanceManager.web.Data
@using FinanceManager.web.Services
@inject ICategoryService CategoryService
@inject NavigationManager UriHelper

<EditForm Model="@Category" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <h3>Edit Category</h3>
    <hr />
    <div class="form-group row">
        <label for="Name" class="col-sm-2 col-form-label">
            Name
        </label>
        <div class="col-sm-10">
            <InputText id="Name" class="form-control" placeholder="Name"
                       @bind-Value="Category.Name" />
            <ValidationMessage For="@(() => Category.Name)" />
        </div>
    </div>
    <div class="form-group row">
        <label for="Description" class="col-sm-2 col-form-label">
            Description
        </label>
        <div class="col-sm-10">
            <InputText id="description" class="form-control" placeholder="Description"
                       @bind-Value="Category.Description" />
            <ValidationMessage For="@(() => Category.Description)" />
        </div>
    </div>
    <div>
        <button class="btn btn-primary" type="submit">Submit</button> <button class="btn btn-primary" @onclick="() => GetBack()">Back</button>
    </div>
</EditForm>

@code {
    private Category Category { get; set; } = new Category();

    [Parameter]
    public string Id { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    protected async override Task OnInitializedAsync()
    {
        Category = await CategoryService.GetByIdAsync(int.Parse(Id));
    }

    protected async Task HandleValidSubmit()
    {
        await CategoryService.UpdateAsync(Category.Id, Category);

        NavigationManager.NavigateTo("/categories");
    }

    private void GetBack()
    {
        UriHelper.NavigateTo("/categories/");
    }
}
